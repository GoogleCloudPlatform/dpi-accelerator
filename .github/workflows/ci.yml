name: Onix CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-go:
    name: Test Go Microservices
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.24'

    - name: Run Go Tests
      run: |
        cd onix
        go test -count=1 ./...

  build-go-binaries:
    name: Build Go Binaries
    runs-on: ubuntu-latest
    needs: test-go
    strategy:
      matrix:
        service: [admin, gateway, registry, subscriber]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.24'

    - name: Build
      run: |
        cd onix/cmd/${{ matrix.service }}
        go build -v -o ../../build/${{ matrix.service }} .

  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: build-go-binaries
    strategy:
      matrix:
        service: [gateway, registry, registry-admin, subscriber]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker Image
      uses: docker/build-push-action@v4
      with:
        context: ./onix
        file: ./onix/Dockerfile.${{ matrix.service }}
        push: false
        tags: ${{ matrix.service }}:latest

  test-python-installer:
    name: Test Python Installer Backend
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r onix/deploy/onix-installer/backend/requirements.txt --require-hashes

    - name: Run Python Tests
      run: |
        cd onix/deploy/onix-installer/backend
        python -m unittest discover tests

  build-frontend-installer:
    name: Build Angular Installer Frontend
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'lts/*'

    - name: Install Dependencies
      run: |
        cd onix/deploy/onix-installer/frontend
        npm install
   
    - name: Run Tests
      run: |
        cd onix/deploy/onix-installer/frontend
        npm test -- --watch=false --browsers=ChromeHeadless

    - name: Build Frontend
      run: |
        cd onix/deploy/onix-installer/frontend
        npm run build -- --configuration production